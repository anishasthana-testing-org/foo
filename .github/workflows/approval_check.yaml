name: Check Membership Pull Request
on:
  workflow_run:
    workflows: ["Receive PR Events"]
    types:
      - completed
jobs:
  check-membership-approvals:
    runs-on: ubuntu-latest
    outputs:
      membership-approvals-status: ${{ steps.pr-validation.outcome }}
    steps:
      - uses: actions/checkout@v3
      - name: Run PR validation
        id: pr-validation
        run: exit 0

  peribolos:
    runs-on: ubuntu-latest
    outputs:
      peribolos-check-status: ${{ steps.peribolos-check.outcome }}
    container:
      image: gcr.io/k8s-prow/peribolos
    steps:
      - uses: actions/checkout@v3
      - name: Check ODH organization membership
        id: peribolos-check
        run: exit 0

  merge-pr:
    runs-on: ubuntu-latest
    needs:
      - check-membership-approvals
      - peribolos
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      - name: Merge PR
        if: ${{ needs.check-membership-approvals.outputs.membership-approvals-status == 'success' && needs.peribolos.outputs.peribolos-check-status == 'success' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.ORG_MANAGEMENT_TOKEN }}
          script: |
            var fs = require('fs');
            var pr_number = Number(fs.readFileSync('./NR'));
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
              merge_method: 'squash',
            });
